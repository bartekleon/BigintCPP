language: cpp

env:
  global:
    # Ubuntu version
    - LINUX_DIST=trusty
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
    # Global build options and C++ flags
    - CXX_FLAGS="-Wall -pedantic -Werror -Wno-variadic-macros -Wno-long-long -Wno-shadow"
    # Misc
    - RUN_TESTS=true
    - COVERAGE=false

matrix:
  include:
    - os: linux
      dist: bionic
      sudo: true
      compiler: clang
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-10.0
          packages:
            - clang-10
            - lcov
      env:
        - MATRIX_EVAL="CC=clang-10 && CXX=clang++-10"
    
before_install:
  # Combine global build options with OS/compiler-dependent options
  - export CMAKE_OPTIONS=${CMAKE_OPTIONS}" "${ENV_CMAKE_OPTIONS}
  - export CXX_FLAGS=${CXX_FLAGS}" "${ENV_CXX_FLAGS}
  - eval "${MATRIX_EVAL}"

install:
  - echo ${PATH}
  - echo ${CXX}
  - ${CXX} --version
  - ${CXX} -v
  - sudo pip install codecov
  - curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -
  
  - export CARGO_INCREMENTAL=0
  - export RUSTFLAGS="-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort"
  - export RUSTDOCFLAGS="-Cpanic=abort"
  
  # Download and install recent cmake
  - |
    if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then
      CMAKE_URL="https://github.com/Kitware/CMake/releases/download/v3.17.2/cmake-3.17.2-Linux-x86_64.tar.gz"
      mkdir -p ${DEPS_DIR}/cmake
      travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${DEPS_DIR}/cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    fi

############################################################################
# Build main and tests
############################################################################
script:
  - mkdir -p build
  - cd build
  - cmake ${CMAKE_OPTIONS} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DCMAKE_BUILD_TYPE=Coverage -DBUILD_TESTS=ON .. 
  - |
      zip -0 ccov.zip `find . \( -name "YOUR_PROJECT_NAME*.gc*" \) -print`;
      ./grcov ccov.zip -s . -t lcov --llvm --branch --ignore-not-existing --ignore "/*" -o lcov.info;
      bash <(curl -s https://codecov.io/bash) -f lcov.info;
  - ctest
